name: CI

on:
  push:
  pull_request:
  repository_dispatch:
  workflow_dispatch:
    types: [run_build]

jobs:
  build:
    runs-on: ubuntu-latest
    container: ps2dev/ps2dev:v1.2.0
    steps:
    - name: Install dependencies
      run: |
        apk add build-base git zip

    - uses: actions/checkout@v2
    - run: |
        git fetch --prune --unshallow

    - name: Install ps2eth
      run: |
        git clone https://github.com/ps2dev/ps2eth.git
        cd ps2eth
        make clean all install

    - name: Compile wLaunchELF without network
      run: |
        make clean all ETH=0
        cp ULE_ISR_HDD.ELF ULE_ISR_HDD_NO-NETWORK.ELF
        cp ULE_ISR_HDD-UNC.ELF ULE_ISR_HDD-UNC_NO-NETWORK.ELF

    - name: Compile wLaunchELF with network
      run: |
        make clean
        make ETH=1

    - name: Get short SHA
      id: slug
      run: echo "::set-output name=sha8::$(echo ${GITHUB_SHA} | cut -c1-8)"
      
    - name: Compress header samples
      run: |
        zip -r ULE-HEADER_SAMPLES __Headers/*

    - name: Upload artifacts
      if: ${{ success() }}
      uses: actions/upload-artifact@v2
      with:
        name: wLaunchELF-${{ steps.slug.outputs.sha8 }}
        path: |
          *.ELF
          ULE-HEADER_SAMPLES*

    - name: Create release
      if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
      uses: marvinpinto/action-automatic-releases@latest
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "latest"
        title: "Latest automated build"
        files: |
          *.ELF
          ULE-HEADER_SAMPLES*
         
  trigger-auto-update:
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: trigger israpps auto-update system
      uses: peter-evans/repository-dispatch@v1
      with:
          token: ${{ secrets.IUS }}
          repository: israpps/FreeMcBoot-Installer
          event-type: Component_update
          client-payload: '{"sha": "${{ github.sha }}"}'
